1. Привет, входит во уроком, мы с вами рассмотрим основной синтексис программами, а также научимся выводить различные тексты внутрь консоли.
2. Если вы работаете в ибежел-студию, то там вам ничего не нужно дополнительно создавать так, как проект мы создали еще в прошлом уроке, ну и соответственно вы можете просто ничего сейчас не делать.
3. Ну и соответственно, если у вас есть вводится Command.NET.Found, то в таком случае попробуйте перейдем установить программу .NET.Framwork, которым мы установлю в прошлом уроке.
4. Поэтому вот в первой строчке мы просто с вами указали то, что мы подключаем, что мы используем такую глобальную библиотеку, которая называется как system.
5. Ну и по факту, за счет использования этой библиотеки, мы с вами получим доступ к, например, тому же самому методу, который называется как right line, и за счет этого метода мы вот с вами только, чтобы выводили некий текст вы терминал, или другими сливаниями мы его выводили в консоль.
6. Поэтому если бы мы не использовали библиотеку SYSTEM, то probably бы бы даже не смогли ничего выводить в консоль потому, bosw하지 можно на самом деле не допустить cracking, потому что у нас бы не было для этого не�ходимого функционала, но поскорвь мы подключили библиотеку, мы получили дополнительно функционал, иçon могли уже работать с термめиналом, или жеλα Bora в другом словам испыjm ИС малоу cầnambling с консолью... В ходе курса мы сейчас будем подключать различные другие дополнительные библиотеки.樣эк, так как в ходе курса мы будем реализовать разные функционалы, основимся только на этой одной библиотеке, допугненько ничего, дописывать пока не будем.
7. Здесь прописывается ключевое слово Name Space, а дальше указывается название для самого этого пространства имен.
8. Кроме того, внутри пространства имен, мы как раз и будем записывать полностью весь необходимый для нас будущий код.
9. И поскольку мы будем прописывать внутри пространства имен, весь необходимый код, то здесь мы не ставим точка запитой.
10. В то же формате как и ранее, здесь мы должны открыть и закрыть фигурные скобки, потому что внутри класса у нас будут какие-либо другие функции, какой-либо другой код, и соответственно, чтобы указать, что этот код он принадлежит к классу, нам необходимо именно открывать фигурные скобки.
11. Все дело в том, что при запуске проекта у нас по умолчанию находится такая функция, которая называется как main.
12. Ну и наконец, здесь внутри этой функции мы уже можем прописывать любой кот, который как раз и будет выполняться при запуске проекта.
13. Во-первых, вы прописите название самого метода, дальше указывайте круглых скобки, в конце ставите точку запятой, говорят о том, что у нас данная строчка года будет завершена.
14. Если вы находитесь вы в Visual Studio обычной программе, то чтобы это все запустить вы можете просто нажать на кнопку пуск.
15. Если я сейчас запущу, то вы можете заметить, что на данный момент у меня здесь не было выведено вот это вот стандартное сообщение, которое всегда у нас выводилось после того, как выполнялся запуск проекта.
16. Важном случае, если вы работает, вижу Augno Terminal Оно туда идтис под звёздку, тогдаodelосerta не когда-нибудьно допис 농 초опар� yancks.
17. И в таком случае у вас программка она не Burada будет завершаться до этого момента, пока не вы не ведете что-либо с клавиатурой.
18. И Slash N он делает то, что мы с вами можем просто, ну как бы выполнить перевод на новую строку.
19. Например, мы уже рассмотрели такой метод, который называется Как Ритки, он ожидает получение лишь одного символа от пользователем.
20. В этом уроке мы с вами изучили весь базовый синтексис для какого либо определенного C-SharpFile, также мы научились выводить информацию в консоль, и плюс мы учились получать данные от пользователя.
